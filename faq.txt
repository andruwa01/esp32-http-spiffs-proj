Important details

[x] Чтобы не было проблемы с https (и http) можно осуществить отключение валидации сервера 
    https://esp32.com/viewtopic.php?t=19200

! mbedTLS -> Certificate Bundle → Enable trusted root certificate bundle 
  на сайте https://kotyara12.ru/iot/espidf_config/ указано, что включенная опция есть много памяти, и у меня эта штука ВКЛЮЧЕНА  
[x] Почитать про ошибку с watchdog timer в моём случае при добавлении #define SPIFFS_CHECK_ON_START
    ! При добавлении SPIFFS_CHECK_ON_START флага в main.h срабатывает watchdog timer
    https://github.com/espressif/esp-idf/issues/1646
    https://github.com/espressif/arduino-esp32/issues/3871
[x] Ошибка, когда intelliSense не видит заголовочных файлов, но при этом build проекта осуществляется успешно
    Решение:
    https://github.com/espressif/vscode-esp-idf-extension/blob/master/docs/C_CPP_CONFIGURATION.md [x] Проблема: вылезает ошибка , но макет с sx1278 прошивается (). Ошибка, срабатывает таймер watchdog.
    Проблема возникает из-за того, что при выборе target esp32s3 в menuconfig перезаписываются значения пинов и потом их Нужно
    записывать заново
    Решение:
    Правильно настроить порты в menuconfig (или sdkconfig). При этом можно автоматически выставить 
#
# Example Configuration
#
CONFIG_LED_GPIO=2
CONFIG_PIN_NUM_MOSI=11
CONFIG_PIN_NUM_MISO=13
CONFIG_PIN_NUM_CLK=12
CONFIG_PIN_NUM_SX1278_CS=4
CONFIG_PIN_NUM_SX1278_NRESET=6
CONFIG_PIN_NUM_SX1278_DIO1=5
CONFIG_SPI_CLOCK_SPEED=10000000

[x] Проблема: в vscode переменные становятся белыми
    Решение: поменять режим C_Cpp.intelliSenseMode в .vscode/settings.json

[x] Важная особенность организации фацловой системы spiffs
!!!
    // The file alice.txt lives under a subdirectory, though SPIFFS itself is flat
    FILE* f = fopen("/spiffs/sub/alice.txt", "r");
    if (f == NULL) {
        ESP_LOGE(TAG, "Failed to open alice.txt");
        return;
    }
!!!

// Система на данный момент
1. Не работает без интернета (wi-fi).
2. 
reset -> 
init -> 
wifi connection -> http request -> 
write data to spiffs -> print data of spiffs 
-> return from app main  

//TODO

// ERRORS & QUESTIONS
[x] Проблема: в два файла не записывались файлы: дело в том, что их длина была выше максимального доступного размера
[] По какой-то причине оставляет 3765 байт в spiffs при загрузке, не понимаю почему так получилось
   , пробовал всё чистить - значит по какой-то причине такое возникает, когда spiffs только инициализируется
   Возможно так и должно быть, правда я не понимаю почему так.

// Рефакторинг
[] Переписать файл настроек и все заголовки и макросы в файлах, чтобы не было лишнего
[] Переписать логику имён и id спутников на язык struct, а также сделать возможность создавать
   такую структуру, чтобы можно было по ней получать id спутника и затем по нему делать запрос

// потом, если нужно будет
[] Сделать так, чтобы при перезапуске esp файлы в spiffs очищались, но таким образом, чтобы нужные данные оставались, 
   а ненужные исчезали. Пока файлы без ЗНАЧЕНИЙ ПО-УМОЛЧАНИЮ. Можно будет потом их вручную вбивать на стороне pc. 
[x] Реализовать очистку места не ПОСЛЕ выполнение всей программы, а ПЕРЕД

// network
! Пока сделать всё линейным, потом если надо будет - будем наворачивать
[x] Реализовать wifi , как в примерах с официального репозитория, т.е. чтобы при потере соединения устройство
[] wifi можно усовершенствовать ещё лучше, чтобы даже когда не получалось подключиться ни к чему прога останавливалась
[] Реализовать функцию, чтобы по нажатию кнопки и неудаче получение ответа от сервера - происходило оповещение об этом
[] Сделать чтобы лампочка загоралась, когда было успешное подключение к интернету (сигнал, что можно нажимать на кнопку и отправлять 
   данный по UART).
 

// uart
[x] Сделать получение вообще всех данных и запись их в spiffs
    [x] Получить данные и распарсить их для одного спутника
    [x] Сделать возможность перезаписи имеющегося файла в spiffs (по заданному в параметре пути) - будет работать при нажатии кнопки
    [x] Сделать возможность забивать путь в spiffs (потом понадобится, когда этих путей будет несколько)
    [x] Для всех спутников tiny gs.
        [x] Создать разделы для каждого из спутников (заранее взять соответствующие названия)
            [x] Определиться с тем, сколько места нужно в spiffs
                [x] места, которое есть (1мб) более чем достаточно
            [x] Сделать массив строк с назаниями спутников (чтобы затем использовать для создания пути) 
            [x] Проблема: при попытке записать данные http ответа - они записываются не только в файл norbi,
                но и в остальные файлы частично - не пойму почему так происходит
                [x] Вероятно, файлы просто неправильно считываются из-за того, что функция fread не видит null-terminate 
                   символ строки
                [x] Попробовать добавить небольшую задержку перед считыванием данных из spiffs
                [x] Модифицировать код таким образом, чтобы из файлов spiffs считывалось столько байт, сколько 
                   там есть, и не больше. Возможно тогда проблема пропадёт
                   https://stackoverflow.com/questions/238603/how-can-i-get-a-files-size-in-c
                [x] Все вышестоящие шаги решили проблему, основное - null-terminated symbol
            [x] Сделать отдельные папки для каждого из спутников (как уже есть по аналогии с norbi.txt),
                затем ещё добавить в cmakelists.txt spiffs_create_partition_image для каждого спутника
    [x] Сделать получение данных по запросу для каждого из спутников
        [x] (проблема отпала сама) Понять почему происходит panic abort (вероятно не хватает памяти)
        [x] понять почему память снова забивается, проверить номера norad спутников, потому что при значении 15 неправильно показываются
        [x] Сделать так, чтобы индексы файлов начинались с 1 для каждого файла, пока они просто считаются постоянно
[x] Настроить второй uart для передачи данных на компьютер
    [x] Попробовать передать короткое сообщение, чтобы было видно в putty
    [x] Реализовать кнопку, по нажатию которой данный записывались бы в UART
    [x] Сделать, чтобы по нажатию кнопки можно бы было получать данные по сети 
       (!) при этом гарантируется, что ЕСТЬ соединение с сетью
    [x] Переписать функцию получения строки таким образом, чтобы не было segmentation fault
    [x] Сделать механизм, чтобы питоновский скрипт мог различать строчки и читать только определённые из них
        [x] Принять несколько строчек за одну отправку и записать каждую строчку в свой файл
            [x] Изучить работу с файлами в python
    [x] Сделать загрузку одного файла на компьютер из spiffs
    [x] Сделать загрузку всех файлов на компьютер из spiffs
    [x] Попробовать передать данные из одного файла spiffs, чтобы было видно в putty
        !!! Попробовал, проще сразу питоновский скрипт написать !!!
[x] Сделать так, чтобы по нужным командам в spiffs происходили нужные процессы: запись / удаление чего-либо и тд
        [x] Сделать так, чтобы текущий функционал выполнялся по команде из питона
        [x] Сделать механизм считывания очередной команды
        [x] Добавить python в github, создать репозиторий
        [x] Подрефакторить уже имеющийся код
        [x] Подумать о том, чтобы сделать обнуление буферов uart с одной и с другой стороны в нужный момент
[] Сделать так, чтобы создавались ещё одни файлы (в которых будут данные именно о номерах passes и возможность вбивать параметры)
    [x] Создать изначальный файл, в котором есть параметры для настройки
    [x] Автоматически перезписывать в этом файле данные , кроме тех строчек, которые являются параметрами для настройки
    [] Попробовать передать файлы по команде в esp32, а затем попробовать достать значения параметров и записать их в spiffs
        [x] Сделать запись всех файлов в spiffs
        [x] ! Сделать очистку этих файлов по команде, пока что файлы очищаются в самом конце работы с ними
        [] ? Возможно, переписать имеющиеся функции с помощью cancel_write() и cancel_read()
        [] ? Избавиться от костылей vtaskdelay , подумать как можно иначе написать эти функции
        [x] Добавить возможность получать информацию о заполненности spiffs
        [] Переписать имеющийся функционал, связанный с запросами на python 
            [x] Создать список спутников satname <-> satid отдельным файлом. (пока список спутников будет совпадать
               со списком спутников в коде, который в железке (чтобы потом проверить)) 
               Затем, с помощью файла можно можно добавлять новые спутники, и убирать их оттуда, если не нужны
            [x] Написать парсинг спутника по аналогии с реализованным на esp32
            [x] Сделать так, чтобы данные спутника записывались в отдельный файл в новой папке
            [x] Проделать операции выше по данным из файла со спутниками
                [x] Считать данные из файла, распарсить каждую строчку, достать оттуда два поля, сделать по ним запросы
            [x] Сделать итерацию по спутникам, чтобы их доставать для update buffer команды
                [x] Сделать запись sat_name спутников в отдельный файл (чтобы потом по ним итерироваться)
                [x] Затем переписать так чтобы делалось по id
                    [x] Переписать load passes to spiffs по id (не из файла настроек)
                    [x] Переписать http запросы на sat_id (из файла настроек)
                    [x] Переписать clear spiffs по id (из файла настроек)
                    [x] Переписать update buffer, чтобы проводился по id (из файла настроек)
                [] ? сделать так, чтобы список записывался в spiffs и не очищался ?
            [x] ? Сделать так, чтобы название файлов состояли из sat_id  
            [x] Сделать так, чтобы очистка файлов делалась по sat_id 
            [] Написать функционал того, чтобы достать файлы которые сейчас в spiffs и переместить их на pc
                [x] Переписать код парсера команд так, чтобы отдельно создавались command файлы, и отдельно создавались passes
                [x] Сделать в блоке кода с http запросом алгоритм создание command файлов (или сделать отдельную команду 
                   которая бы инициировала создание таких файлов)
                [x] Загрузить файлы пк -> spiffs
                    [x] Выгрузить passes
                    [x] Выгрузить commands
                [x] сделать формат названий файлов следующим образом:
                - <sat_id>_command.txt
                - <sat_id>_response.txt
                - <sat_id>_board_command.txt
                - <sat_id>_board_response.txt
                и соответственно, чтобы формировались файлы в папках:
                - commands/
                - responses/
                - board_commands/
                - board_responses/
                [] Загрузить файлы команд  spiffs -> пк
                    [x] Достать passes
                        [x] Написать отдельную функцию для того, чтобы парсить пакет passes файлов
                    [x] Достать commands
                        [x] Написать отдельную функцию для того, чтобы парсить пакет command файлов
                    [x] (уже есть) ? Сделать отдельную папку для каждой пары passes/commands с датой
                    [x] (Даже не понадобилось) ? сделать получение passes и commands из spiffs по двум разным командам
                    [x] Разделить получение одного пакета и другого (по всей видимости иначе не получится,
                       хотя можно подумать об этом)
                    [x] Получить два пакета по единой команде
                    [x] (Вроде уже не актуально, но быть внимательным) Не забыть исправить ситуацию, когда неверно парсятся данные, т.е. чтобы 
                        всё работало не с sat_id:2,а с sat_id: 2
            [] ? Сделать отдельную init функцию для инициализации изначальных файлов (самого минимума)
            [] Сделать механизм отслеживания состояния текущего файла настроек
                [] Создавать изначальный файл (пустой), если в нём ничего нет
                [] Выдавать предупреждение в том случае, если файл ничего не содержит
                   (и разумеется заканчивать выполнение программы, потому что её дальнейшее выполнение бессмысленно)
            [] выводить подробную информацию о том, сколько в каком файле в spiffs данных
            [] Улучшить механизм синхронизации python и c 
                [] Улучишть синхронизацию при переключении с одной программы на другую 
                   в процессе их выполнения
                [] Улучшить синхронизацию при передаче файлов (возможно сделать какой-то единый механизм 
                   приёма/передачи файлов исходя из имеющиегося опыта, например функцию - подаёшь туда файл, он
                   пакуется и отправялется по uart в определённом формате, затем в питоне тоже функцию, которая уже принимает файлъ
                   )
                    [] ИЛИ сделать так, чтобы при передаче огромного файла задержка на стороне esp32 формировалась
                       автоматически исходя из количества файлов (можно использовать тот самый файл с настройками, который
                       мы в той же функции update buffer в esp32 получаем перед отправкой файлов)
            
            [x] Сделать возможность записи файлов спутников из новой папки в spiffs железки (пусть имена совпадают с тем, что
               было, чтобы лишний раз ничего не трогать, потом это можно будет изменить)
                [x] Создать новую команду, по которой файлы эти файлы будут отправляться в spiffs
                [x] Сделать возможность очистки этих самых файлов
                ! Нечто похожее уже реализоввывалось, поэтому можно просто скопировать код 
            [x] Создать отдельный файл python с названиями папок
            [x] Сделать так, чтобы command файлы отправлялись в spiffs и записывались
            [x] синхронизировать названия файлов, чтобы в spiffs на каждый спутник было два файла, которые 
                отличались бы в названии
            [x] Сделать так, чтобы не было возможности отправить команду на плату, пока она не прогрузится до того момента
               как сможет rринимать команды (просто чтобы мы не получили рассинхрон между этими двумя вещами) 
               Решение: сделать небольшую задержеку перед запуском скрипта с получение команд в питоне
            [x] Убрать из выполнения кода на esp32 всё, что связано с сетью и тд , попробовать программу без этого
            [x] ? Сделать проверку, когда в spiffs нету места (именно перед отправкой)
            [x] (? Сделать потом) сделать возможность сравнивать кол-во байт, которые будут записаны с количеством байт, которые уже есть в spiffs
            [x] При новых запросах к сайту обновлять все фалйлв в папке ИЛИ сделать так, чтобы создавались отдельные папки с результатами
               запроса в конкретное время
            [x] (? потом) Сделать возможность считать данные файлов spiffs, которые в данный момент находятся в файловой системе
                [x] Вывести информацию по каждому файлу, сколько в нём находится байт
            [x] (Описать это в документации) Добавить информацию о том, в какие папки будут записываться файлы, и откуда они будут браться
                   на этапе оповещения пользователя об этом
            [x] Сделать возможность создавать другие файлы с настройками
                функционал: Укажите имя файла настроек
            [x] Определиться с тем, в какой момент создаются папки (отдельно сделать функцию для проверки этого?)
            [x] ? Сделать, чтобы при запуске одной команды подключался функционал другой (чтобы 
               перед загрузкой файлов в spiffs предыдущие файлы автоматически чистились)
            [x] (Думаю не нужно) ? Добавить запись о дате последнего изменения в файле
            [x] (Сделано) ? Переписать логику взаимодействия с файлами на железке так, чтобы всё делалось по id спутников
            [x] (Переписал) ? Подумать о том, чтобы переписать код, отвечающий за создание файлов pass и command
                таким образом, чтобы файл создавался не во время совершения запросов, а уже потом по одной 
                функции, т.е. так будет логичнее и более ёмко, и в конце концов читаемо
            [x] (Сделал) ? (На будущее) Сделать возможность доставать данные из spiffs по id спутника
            [] Оптимизировать код на python таким образом, чтобы питон скрипт и плата синхронизировались
                при пересылке данных по uart
                [x] Сделать отдельную функцию, которая будет присылать сообщения на плату (чтобы 
                   питон скрипт мог "отвечать" плате, а не только плата скрипту)
                [] Внедрить новые функции в те функции, где ещё не внедрил
                    - clear all
                    - get data
            [] Сделать возможность вбивать параметры для запросов для каждого спутника при update shedules
            [] Обработать имеющиеся исключения:
                - Имя файла с настройками не существует
                - Когда плата не подключена к компьютеру
                - Когда wait_response_from_board() читает что-то не то, ошибка с utf-8
                - Такое исключение появляется, когда в uart буфере уже есть какие-то данные
                ...
                дополнить список по мере появления исключений
            [] Провести итоговый рефакторинг кода

[x] Что за dialout пользователь и зачем порт было добавлять а разрешения?

//  MAIN TASK
[] (? А нужно ли это) сделать так, чтобы после выхода из main_task кнопкой пользоваться было нельзя (очистить память)
[] Сделать прогу с считыванием данных uart, чтобы можно было по командам делать
   [x] Выгрузка файлов из spiffs на компьютер  (предполагаю, что при этом esp32 должна работать
      в режиме подключения к wifi, чтобы отдать данные на UART, можно попробвать сделать вход в этот
      режим через кнопку)
[] Реализовать планировщик, чтобы по времени доставалось нужное расписание + отдавался приоритет спутнику с большей высотой
[x] Сформировать правильный sdkconfig.default, который будет в дальнейшем использоваться
[] Ещё раз посмотреть всё переменные где используется память, возможно оптимизировать их как-то
[x] Добавить проверку на то, сколько памяти спользуется в spiffs.
[] Сделать возможность добавлять новые спутники
[] Сделать возможность вбивать параметры, по которым будет формироваться запрос на сервер
[] Сделать, чтобы при работающем wifi и наличии подключения горела лампоча
[] Подумать как использовать имеющуюуся кнопку
[] Настроить возможность подключаться по https сертификату
       https://youtu.be/Dv0APuuHFh8?si=6U2MrLzdfnrta-xL - тут показаны get запросы и как реализуется сертификат
[] попробовать с сертификатом - можно настроить сертификат, но можно сделать это потом
[] Настроить всё с помощью esp tls

// OPTIONAL TODO
[] Что такое прерывания и как они реализованы ? ISR etc
[] Прочитать про backtrace в контексте прерываний
[] Прочитать про build систему espressif и какие там настройки есть (это нужно чтобы правильно скомпилировать
    имеющейся код, только на в eclipse а в vscode). К тому же поможет разобраться в cmake.
        [] файл c_cpp_properties.json и зачем он нужен
        [] файл compile_commands.json и зачем он нужен
[] (тут тоже есть про память) изучить таймеры в esp32 https://kotyara12.ru/iot/esp32_timers/   
[] почитать дополнительно про main task stack size
[] почитать дополнительно про event loop task stack size
[]  High-resolution timer task stack size что это ?
[]  Hardware timer to use for esp_timer что это ?
[x] повторить взаимодействие файлов через fopen , frpintf etc
[] Можно почитать про то, как грамотно использовать stack и проверять его на переполнение
    [] http://microsin.net/programming/arm-troubleshooting-faq/freertos-stack-usage-and-stack-overflow-checking.html
    [] https://docs.espressif.com/projects/esp-idf/en/stable/esp32/api-reference/system/mem_alloc.html
    [] https://docs.espressif.com/projects/esp-idf/en/stable/esp32/api-reference/system/freertos.html?highlight=uxtaskgetsystemstate#_CPPv420uxTaskGetSystemStatePC12TaskStatus_tK11UBaseType_tPC8uint32_t
    [] https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-guides/performance/ram-usage.html
[] Посмотреть исходные коды tiny GS и посмотреть с какими библиотеками они там работают.
[] Прочитать про cmake https://habr.com/ru/articles/155467/
[] JTAG что это и как с этим работать? в stm32 было чтото похожее
    [] https://www.youtube.com/watch?v=uq93H7T7cOQ

// DONE (last done on the top)
[x] Ознакомиться с имеющимися кодами, понять зачем они и перенести их в platformio    
    [x] Попробовать починить любой другой пример => 
    [x] Попробовать починить код, который sx
    [x] Запустить пример espidf
    [x] Воспользоваться не кнопкой build которая cmake , а кнопкой build от самой esp-idf

[x] spiffs под esp idf , файл небольшой 1кб нужно будет создать
    [x] Тут есть про API которое можно вызывать в platformio https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/storage/spiffs.html
    [x] Создать .csv файл с разметкой места во flash памяти  
    [x] Прошить плату с использованием spiffs
    [x] Разобраться с примером, попробовать записать текст в файл и получить его оттуда
[x] Тут в целом про flash память esp32 и о spiffs есть немного там (найти через ctrl + f)  https://kotyara12.ru/iot/esp32_flash/

[x] Почитать в целом про память esp32 https://kotyara12.ru/iot/esp32_memory/ 

[x] разобраться с системой логов esp32 
    [x] В контексте platformio (у неё есть свои настройки monitor_filters в platformio.ini)
        [x] прочитать статью про platformio https://kotyara12.ru/iot/pio_first_project/
        [x] про конфигурацию esp idf https://kotyara12.ru/iot/espidf_config/ 
        [x] esp_log на сайте esp_idf прочитать

[x] Понять, почему логи в Serial выводятся с какими-то странными символами: возможно дело в monitor_filters в platformio.ini
        Нужно в monitor_filter присвоить значение direct. В этом случае выводятся логи без дополнительных символов. 
        Тут можно почитать подробнее:
        https://docs.platformio.org/en/latest/core/userguide/device/cmd_monitor.html#cmd-device-monitor-filters

[x] Найти библиотеку для sx1280(1278) для работы в esp idf
    Библиотеки есть также в скачанном архиве для новой платы, которую принесли
    https://github.com/Inteform/esp32-lora-library
    https://github.com/dernasherbrezon/sx127x - показалась мне наиболее хорошей

[x] Найти библиотеку для работы с LED дисплеем (или можно как-то использовать ардуино?)
    https://docs.espressif.com/projects/esp-idf/en/v5.0/esp32/api-reference/peripherals/lcd.html# - в официальной документации есть информация для работы с этим 
    
[x] Создать Git репозиторий для проекта 